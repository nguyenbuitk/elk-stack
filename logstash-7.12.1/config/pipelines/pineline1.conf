input {
    file {
        path => "/home/ubuntu/elk/logstash-7.12.1/event-data/apache_*.log"
        start_position => "beginning"
    }

    file {
        path => "/home/ubuntu/elk/logstash-7.12.1/event-data/java_errors.log"
        start_position => "beginning"
        codec => multiline {
            
        }
    }
}

filter {
    if [headers][request_path] =~ "error" or [path] =~ "errors" {
        mutate {
            replace => { type => "error"}
        }
    } else {
        mutate {
            replace => { type => "accesss"}
        }

        grok {
            match => { "message" => '%{HTTPD_COMBINEDLOG }' }
        }

        if "_grokparsefailure" in [tags] {
            drop {}
        }

        useragent {
            source => "agent"
            target => "ua"
        }

        if [request] =~ /^\/admin\// {
            drop { }
        }

        if [request] =~ /^\/js\// or [request] =~ /^\/css\// or [request] in ["/robots.txt", "/favicon.ico"] {
            drop { }
        }

        mutate {
            convert => {
                "response" => "integer"
                "bytes" => "integer"
            }
        }

        date {
            match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
            remove_field => ["timestamp"]
        }
        
        # Crawlers
        if [ua][device] == "Spider" {
            drop { }
        }

        geoip {
            source => "clientip"
        }
    }

    mutate {
        remove_field => ["headers", "@version", "host"]
    }
}

output {
    stdout {
        codec => rubydebug
    }

    file {
        path => "%{type}.log"
    }

    elasticsearch {
        hosts => ["localhost:9200"]
        # index => "%{type}-%{+YYYY.MM.dd}"
        document_type => "default"
        http_compression => true
    }
}