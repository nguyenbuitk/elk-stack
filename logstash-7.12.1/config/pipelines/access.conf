input {
    file {
        path => "/home/ubuntu/elk/logstash-7.12.1/event-data/apache_access*.log"
        start_position => "beginning"
    }
}

filter {

    mutate {
        replace => { type => "accesss"}
    }

    grok {
        #  we tell it what pattern to look for and how to label the strings that match those patterns.
        match => { "message" => '%{HTTPD_COMBINEDLOG }' }
    }

    if "_grokparsefailure" in [tags] {
        drop {}
    }

    useragent {
        source => "agent"
        target => "ua"
    }

    if [request] =~ /^\/admin\// {
        drop { }
    }

    if [request] =~ /^\/js\// or [request] =~ /^\/css\// or [request] in ["/robots.txt", "/favicon.ico"] {
        drop { }
    }

    mutate {
        convert => {
            "response" => "integer"
            "bytes" => "integer"
        }
    }

    date {
        match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
        remove_field => ["timestamp"]
    }
    
    # Crawlers
    if [ua][device] == "Spider" {
        drop { }
    }

    geoip {
        source => "clientip"
    }


    mutate {
        remove_field => ["headers", "@version", "host"]
    }
}

output {
    stdout {
        codec => rubydebug {
            metadata => true
        }
    }

    # file {
    #     path => "%{type}.log"
    # }

    # elasticsearch {
    #     hosts => ["localhost:9200"]
    #     # index => "%{type}-%{+YYYY.MM.dd}"
    #     document_type => "default"
    #     http_compression => true
    # }
}